Bench de sdl_put_pixel

########################################
	unsigned char	*img;
	int				pos;

	img = sdl->image;
	pos = x * sdl->bpp + y * sdl->pitch;
	img[pos] = color.c.b;
	img[pos + 1] = color.c.g;
	img[pos + 2] = color.c.r;

BENCH
1.93 {
0.97 img
2.58 pos
1.29 img pos
1.93 pos + 2
1.93 pos + 2
0.64 }
=> 11.27

#####################################
	unsigned char	*img;
	int				pos;

	pos = x * sdl->bpp + y * sdl->pitch;
	img = sdl->image + pos;
	*img++ = color.c.b;
	*img++ = color.c.g;
	*img = color.c.r;

#avec pointeur
1.99 {
2.65 pos
1.65 img
1.99 ++
1.99 ++
0.99 *
0.66 }
=> 11.92

#####################################
NB : inverser l'enum (sauf le a)
	unsigned int	*img;
	int				pos;

	pos = x * sdl->bpp + y * sdl->pitch;
	img = (unsigned int *)(sdl->image + pos);
	*img = color.rgba;

BENCH
1.56 {
2.08 pos
1.30 img
0.78 *img
0.52 }
=> 6.24


#####################################
#####################################
sdl_get_pixel

	t_color	pixel;
	int		pos;

1.54
2.30	pos = x + (key % text->n_cols) * text->w
3.07		+ (y + key / text->n_cols * text->h)
1.02		* text->w * text->n_cols;
1.28	pixel.rgba = text->pixels[pos];
0.77	return (pixel);
=> 9.98

=> remplacer les t_ivec2 par des tableaux !!!!!
=> precompute les calculs ? comment les passer ?